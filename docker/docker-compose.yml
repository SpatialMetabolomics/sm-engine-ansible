version: '2'

services:

  elasticsearch:
    image: elasticsearch:5.5.2
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
    #   - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - sm

  redis:
    image: redis:4.0.9-alpine
    # ports:
    #   - "6379:6379"
    networks:
      - sm

  rabbitmq:
    image: rabbitmq
    # ports:
    #   - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: sm
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - sm

  postgres:
    image: postgres
    # ports:
    #   - "5432:5432"
    volumes:
      - ./postgres/initdb.d/:/docker-entrypoint-initdb.d:ro
      - ./data/pgdata:/var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - sm

  mol-db:
    build:
      context: ./mol-db
      args:
        MOL_DB_REPO: "$MOL_DB_REPO"
        MOL_DB_BRANCH: "$MOL_DB_BRANCH"
    # ports:
    #   - "5001:5001"
    volumes:
      - ./mol-db/config/:/opt/mol-db/conf:ro
    environment:
      APP_ENV: dev
    networks:
      - sm
    depends_on:
      - rabbitmq
      - postgres

  sm-api:
    build:
      context: ./sm-engine
      args:
        SM_ENGINE_REPO: "$SM_ENGINE_REPO"
        SM_ENGINE_BRANCH: "$SM_ENGINE_BRANCH"
    # ports:
    #   - "5123:5123"
    volumes:
      - ./sm-engine/conf/:/opt/sm-engine/conf:ro
      - "${DATA_ROOT}:/opt/data:z"
    networks:
      - sm
    depends_on:
      - rabbitmq
      - postgres
      - elasticsearch

  sm-daemon:
    build:
      context: ./sm-engine
      args:
        SM_ENGINE_REPO: "$SM_ENGINE_REPO"
        SM_ENGINE_BRANCH: "$SM_ENGINE_BRANCH"
    command: /start-daemon.sh
    mem_limit: 8g
    cpu_shares: 512
    volumes:
      - ./sm-engine/conf/:/opt/sm-engine/conf:ro
      - "${DATA_ROOT}:/opt/data:z"
    environment:
      SPARK_WORKER_CORES: 4
    networks:
      - sm
    depends_on:
      - postgres
      - elasticsearch
      - sm-api

  sm-graphql:
    build:
      context: ./sm-graphql
      args:
        SM_GRAPHQL_REPO: "$SM_GRAPHQL_REPO"
        SM_GRAPHQL_BRANCH: "$SM_GRAPHQL_BRANCH"
    # ports:
    #   - "3010:3010"
    #   - "5666:5666"
    #   - "4201:4201"
    volumes:
      - ./sm-graphql/config/:/opt/sm-graphql/config:ro
      - ${DATA_ROOT}:/opt/data:z
    networks:
      - sm
    depends_on:
      - rabbitmq

  sm-webapp:
    build:
      context: ./sm-webapp
      args:
        SM_WEBAPP_REPO: "$SM_WEBAPP_REPO"
        SM_WEBAPP_BRANCH: "$SM_WEBAPP_BRANCH"
    # ports:
    #   - "8082:8082"
    volumes:
      - ./sm-webapp/config/conf.js:/opt/sm-webapp/conf.js:ro
      - ./sm-webapp/config/clientConfig.json:/opt/sm-webapp/src/clientConfig.json:ro
      - "${DATA_ROOT}:/opt/data:z"
    depends_on:
      - redis
    networks:
      - sm

  nginx:
    image: nginx
    ports:
      - "${WWW_PORT}:8999" # main web server
    expose:
      - "${WWW_PORT}"
    volumes:
      - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/config/proxy-params.conf:/etc/nginx/proxy-params.conf:ro
      - ./nginx/config/conf.d/:/etc/nginx/conf.d:ro
      - ./nginx/config/sites-enabled/:/etc/nginx/sites-enabled:ro
      - "${DATA_ROOT}/mol-images:/var/www/mol-images:z"
    networks:
      - sm
    depends_on:
      - elasticsearch
      - mol-db
      - sm-graphql
      - sm-webapp

networks:
  sm:
    driver: bridge